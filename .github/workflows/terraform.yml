name: Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkov:
    name: Run Checkov
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.2

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov
        continue-on-error: true
        run: |
          checkov -d . --output cli
          EXIT_CODE=$?
          if [ $EXIT_CODE -ne 0 ]; then
            echo "Checkov failed with exit code $EXIT_CODE"
            exit 0  # Or a different exit code if you want to handle it differently
          fi

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: checkov

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.2

      - name: Terraform Init
        working-directory: poc
        run: terraform init -upgrade

      - name: Terraform Plan
        working-directory: poc
        id: plan
        run: terraform plan -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        working-directory: poc
        with:
          name: tfplan
          path: tfplan

  manual-approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.event_name == 'push'

    steps:
      - name: Request manual approval
        uses: github-action/manual-approval@v1
        with:
          approval_message: "Please review the Terraform plan and approve the deployment."

  apply-terraform:
    name: Apply Terraform
    runs-on: ubuntu-latest
    needs: manual-approval
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
